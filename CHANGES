Changes:

2.7.0
----------------
* cmd/seqls - Properly build against gofileseq/v2
* cmd/seqls - Add --hash1 flag to use pad hash width=1 instead of 4
* cmd/seqls - Add --strict flag to apply strict length of search pattern pad character to matches

2.6.0
----------------
* cpp: Using C++11 and std::regex by default. Detect older compilers and use libpcre automatically as needed.
* go/cpp: Preserve complex file extensions parsed after a frame, such as file.0001.tar.gz (".tar.gz")

2.5.0
----------------
* go: Use strings.Builder instead of bytes.Buffer for less allocations (requires go >= 1.10)

2.4.0
----------------
* Update FindSequencesOnDisk to sort mixed frame padding into discreet sequence results
* Allow strict padding length check when filtering files for pattern match in FindSequenceOnDisk
* go/cpp: Adjust path split regex to better handle range directive chars being used at the end of a base name

2.3.1
----------------
* cpp-port: Fix: FrameSet::isValid() would return true even if it had a zero length range

2.3.0
----------------
* cpp - pure c++ port now available

2.2.3
----------------
* #8 - Bug: Use deterministic resolution of the padding character in findSequencesOnDisk()

2.2.2
----------------
* cmd/seqinfo - New tool for parsing and printing info about one or more file seq patterns
* Refactored vendoring into cmd/ location

2.2.1
----------------
* waf c++ build flags updated for static lib to avoid errors about -fPIC when link into another C++ lib

2.2.0
----------------
* #6 - Bug: Single frame parsing for padding and zfill does not match py-fileseq
* #7 - Feature: Allow option for changing frame padding styles (i.e. to something like Nuke)

2.1.0
----------------
* cpp - New C++ bindings on top of gofileseq

2.0.1
----------------
* cmd/seqls - Detect symlinks to directories and don't interpret them as discovered sequences

2.0.0
----------------
* Major refactor to the underlying logic of resolving ranges. Use an optimized storage and iteration approach, in order to
handle arbitrarily large ranges. Avoids memory allocation crashes, and very slow construction of FrameSet/FileSequence

Known Issues:
* While creating a FrameSet from a massive range like "1-10000000000x2" will be very quick, creating
FrameSets from multi-ranges with massive components like "20,50,60-10000000000" may be slow.
Improvements are still needed to the process of detecting unique values in the previously added
range components.
* Invert/Normalize functions are not as optimized as they could be. While they are much faster now for the common case of source
ranges like "1-10x2,50-100x3", they are significantly slower for less common cases where the source range is a massive amount
of individual values like "1,2,3,4,...,100000"

1.0.0
----------------
* cmd/seqls - Large refactor ; added support for passing sequence patterns (path/files.#.jpg)
* cmd/seqls - Skip hidden directories (in addition to hidden files), unless -a flag is used
* Docstring corrections


0.9.9
----------------
* Add support for reverse frame ranges (10-1)
* Improve the logic for parsing non-sequence single file paths
* Improve the logic for parsing frame numbers
* Add options to FindSequencesOnDisk for showing hidden files
* Fix various parsing conditions that could crash FindSequencesOnDisk
* seqls: Expose options for all / hidden files in results


0.9.2
----------------
* seqls: Buffer stdout


0.9.1
----------------
* Tweaks to gox cross-compiling
* seqls: Added a -quiet flag
* seqls: Format adjustments for Windows platform
* seqls: Continuing listing, even when encountering file errors


0.9.0
----------------
* Initial Release
