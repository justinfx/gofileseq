name: Build and Deploy

on:
  push:
    tags:
      - "*"
    branches-ignore:
      - 'exp_*'
  pull_request:
    branches-ignore:
      - 'exp_*'

jobs:
  test_go:
    name: Test go-${{ matrix.go }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        go: [ 1.24.x ]
        os: [ ubuntu-latest, macOs-latest, windows-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 5

      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Test
        run: go test -v . ./ranges

  release:
    name: Release
    runs-on: "ubuntu-latest"
    needs: test_go
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
      - name: Release ðŸš€
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cpp:
    name: C++ tests and docs
    runs-on: "ubuntu-latest"
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup dependencies
        run: sudo apt-get install -y gcc libpcre++-dev

      - name: Setup waf
        env:
          WAF_VERSION: waf-2.1.5
        run: test -x waf-light || {
          cd $HOME &&
          wget "https://gitlab.com/ita1024/waf/-/archive/${WAF_VERSION}/waf-${WAF_VERSION}.tar.gz" &&
          tar -zxf "waf-${WAF_VERSION}.tar.gz" &&
          cd "waf-${WAF_VERSION}" &&
          ./waf-light configure build &&
          cd ${HOME} &&
          mv "waf-${WAF_VERSION}" waf &&
          cd $GITHUB_WORKSPACE; }

      - name: Build and Test (waf)
        run: cd ${GITHUB_WORKSPACE}/cpp &&
          ${HOME}/waf/waf configure test

      - name: Build and Test (cmake)
        run: cd ${GITHUB_WORKSPACE}/cpp &&
          mkdir build_cmake && cd build_cmake &&
          cmake .. &&
          make &&
          ./test/fileseq_test

      - name: Build doxygen
        run: sudo apt-get update &&
          sudo apt install -y doxygen doxygen-doc doxygen-latex doxygen-gui graphviz &&
          cd ${GITHUB_WORKSPACE}/cpp/docs &&
          doxygen

      - name: Deploy doc ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.7.1
        if: github.ref == 'refs/heads/master'
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: cpp/docs/build # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
